{
  "version": 3,
  "sources": [
    "web/src/app/ui/kmwuitoggle.ts"
  ],
  "sourceRoot": "https://s.keyman.com/kmw/engine/19.0.7/src",
  "sourcesContent": [
    "/***\r\n   KeymanWeb 17.0\r\n   Copyright 2019-2023 SIL International\r\n***/\r\n\r\nimport type { KeymanEngine, KeyboardCookie, UIModule } from 'keyman/app/browser';\r\nimport type { FloatingOSKViewCookie } from 'keyman/engine/osk';\r\n\r\ndeclare var keyman: KeymanEngine\r\n\r\ntype KeyboardMenuEntry = {\r\n  _InternalName: string,\r\n  _LanguageCode: string,\r\n  _Index: number;\r\n}\r\n\r\ninterface Owned<T> {\r\n  _owningObject?: T;\r\n}\r\n\r\n// If a UI module has been loaded, we can rely on the publically-published 'name' property\r\n// having been set as a way to short-out a UI reload.  Its parent object always exists by\r\n// this point in the build process.\r\nif(!keyman?.ui?.name) {\r\n  /********************************/\r\n  /*                              */\r\n  /* Toggle User Interface Code   */\r\n  /*                              */\r\n  /********************************/\r\n\r\n  /**\r\n   * Do not enclose in an anonymous function, as the compiler may create\r\n   * global scope variables to replace true, false, null, which may collide\r\n   * with other variables.\r\n   * Instead, use the --output-wrapper command during optimization, which will\r\n   * add the anonymous function to enclose all code, including those optimized\r\n   * variables which would otherwise have global scope.\r\n   **/\r\n\r\n  try {\r\n    // Declare KeymanWeb, OnScreen Keyboard and Util objects\r\n    const keymanweb = keyman;\r\n    //var dbg=keymanweb['debug'];\r\n    const util = keymanweb.util;\r\n\r\n    // Disable UI for touch devices\r\n    if(util.isTouchDevice()) {\r\n      throw '';\r\n    }\r\n\r\n    class ToggleUI implements UIModule {\r\n      // Initialize user interface common variables\r\n      readonly name = 'toggle';\r\n      initialized = false;\r\n\r\n      /**\r\n       * The top-level element of the Toggle UI module.\r\n       */\r\n      controller: HTMLDivElement = null;\r\n      oskButton: ReturnType<ToggleUI['button']> = null;  // inner class - Button, as defined within the .button method\r\n      kbdButton: ReturnType<ToggleUI['button']> = null;  // likewise.\r\n      controllerHovered = false;\r\n\r\n      keyboards: KeyboardMenuEntry[] = [];\r\n      /**\r\n       * The index of the previously-active keyboard in this UI module's language list.\r\n       */\r\n      lastActiveKeyboard = -1;\r\n\r\n      selectedMenuItem: HTMLAnchorElement = null;\r\n      updateList = true;\r\n\r\n      /**\r\n       * The numeric handle for an active window.setTimeout call.\r\n       */\r\n      updateTimer: number = null;\r\n\r\n      keyboardMenu: HTMLUListElement;\r\n\r\n      /**\r\n       * Update the KeymanWeb user interface when an input element is focused or blurred\r\n       *\r\n       * @param       {Object}            someElement     focused element\r\n       * @param       {(boolean|number)}  focusing        true if focusing\r\n       * @param       {Object}            activeControl   Object representing API specs for the control, if it exists and is now focused.\r\n       */\r\n      doFocus(someElement: HTMLElement, focusing: boolean | number, activeControl: HTMLElement) {\r\n        // This callback must be ignored until UI is initialized, or for touch devices (which can never initialize the UI)\r\n        if(!this.initialized) {\r\n          return;\r\n        }\r\n\r\n        // We don't want to shift the controller to something that's not an input element,\r\n        // but do want to account for window.event's data when legitimate.\r\n        if(window.event && keymanweb.isAttached(window.event.srcElement as HTMLElement)) {\r\n          someElement=window.event.srcElement as HTMLElement;\r\n        }\r\n\r\n        if(focusing) {\r\n          this.controller.style.display = 'block';\r\n        } else {\r\n          if(!(keymanweb.getUIState().activationPending) && !this.controllerHovered) {\r\n            this.controller.style.display = 'none';\r\n          }\r\n        }\r\n\r\n        /* I2406 - Find an appropriate position for the controller */\r\n        let w: number, h: number;\r\n\r\n        const p = util.getAbsolute(someElement);\r\n        let x = p.x;\r\n        let y = p.y;\r\n\r\n        var ownerDoc = someElement.ownerDocument;\r\n        if(ownerDoc.designMode == 'on' && ownerDoc.defaultView && ownerDoc.defaultView.frameElement) {\r\n          w = ownerDoc.defaultView.frameElement.clientWidth;\r\n          h = ownerDoc.defaultView.frameElement.clientHeight;\r\n        } else {\r\n          w = someElement.offsetWidth;\r\n          h = someElement.offsetHeight;\r\n        }\r\n\r\n        if(x + w > window.innerWidth + document.documentElement.scrollLeft - this.controller.offsetWidth - 1) {\r\n          y += h;\r\n        } else {\r\n          x += w + 2;\r\n          //y += h - ui.controller.offsetHeight - 1; // ui.controller.offsetheight is returned as its prior value, which results in incorrect UI positioning\r\n          // so better to set the offset absolutely JMD 11/2/11\r\n          y += h - 29; //prevent UI being positioned *above* the top of the element\r\n        }\r\n\r\n        if(isNaN(x) || isNaN(y)) {\r\n          return;\r\n        }\r\n\r\n        this.controller.style.left = x + 'px';\r\n        this.controller.style.top = y + 'px';\r\n      }\r\n\r\n      registerEvents() {\r\n        let osk = keymanweb.osk;\r\n\r\n        if(!osk) {\r\n          return;\r\n        }\r\n\r\n        osk.addEventListener('show', (oskPosition) => {\r\n            // Ensure that the ui.controller is visible if help is displayed\r\n            this.controller.style.display = 'block';\r\n            this.oskButton._setSelected(true);\r\n\r\n            return oskPosition;\r\n          });\r\n\r\n        osk.addEventListener('hide', (byUser) => {\r\n          if(byUser['HiddenByUser']) {\r\n            this.oskButton._setSelected(false);\r\n          }\r\n        });\r\n      };\r\n\r\n      /**\r\n       * Toggle the on screen keyboard display - KMW button control event\r\n       **/\r\n      readonly switchOsk = () => {\r\n        // Check that user control of OSK is allowed\r\n        if((keymanweb.getActiveKeyboard() == '') || keymanweb.isCJK()) {\r\n          return;\r\n        }\r\n\r\n        if(keymanweb.osk) {\r\n          const newState = !keymanweb.osk.isEnabled();\r\n          keymanweb.osk.show(newState);\r\n\r\n          // Also, indicate that the OSK is intentionally hidden.\r\n          this.oskButton._setSelected(newState);\r\n        }\r\n      }\r\n\r\n      /**\r\n       * Toggle a single keyboard on or off - KMW button control event\r\n       **/\r\n      readonly switchSingleKbd = () => {\r\n        const _v = keymanweb.getActiveKeyboard() == '';\r\n        let nLastKbd=0, kbdName='', lgCode='';\r\n\r\n        if(_v) {\r\n          if(this.keyboards.length == 0) {\r\n            return;\r\n          }\r\n\r\n          if(this.lastActiveKeyboard < this.keyboards.length && this.lastActiveKeyboard >= 0) {\r\n            nLastKbd = this.lastActiveKeyboard;\r\n          }\r\n\r\n          kbdName = this.keyboards[nLastKbd]._InternalName;\r\n          lgCode = this.keyboards[nLastKbd]._LanguageCode;\r\n          keymanweb.setActiveKeyboard(kbdName,lgCode);\r\n          this.lastActiveKeyboard = nLastKbd;\r\n        } else {\r\n          keymanweb.setActiveKeyboard('');\r\n        }\r\n\r\n        if(this.kbdButton) {\r\n          this.kbdButton._setSelected(_v);\r\n        }\r\n      }\r\n\r\n      /**\r\n       * Switch to the next keyboard in the list - KMW button control event\r\n       **/\r\n      readonly switchNextKbd = () => {\r\n        let _v = (keymanweb.getActiveKeyboard() == '');\r\n        let kbdName='', lgCode='';\r\n\r\n        if(_v) {\r\n          if(this.keyboards.length == 0) {\r\n            return;\r\n          }\r\n\r\n          kbdName = this.keyboards[0]._InternalName;\r\n          lgCode = this.keyboards[0]._LanguageCode;\r\n          keymanweb.setActiveKeyboard(kbdName,lgCode);\r\n          this.lastActiveKeyboard = 0;\r\n        } else {\r\n          if(this.lastActiveKeyboard == this.keyboards.length-1) {\r\n            keymanweb.setActiveKeyboard('');\r\n            _v = false;\r\n          } else {\r\n            kbdName = this.keyboards[++this.lastActiveKeyboard]._InternalName;\r\n            lgCode = this.keyboards[this.lastActiveKeyboard]._LanguageCode;\r\n            keymanweb.setActiveKeyboard(kbdName,lgCode);\r\n            _v = true;\r\n          }\r\n        }\r\n\r\n        if(this.kbdButton) {\r\n          this.kbdButton._setSelected(_v);\r\n        }\r\n      }\r\n\r\n      /**\r\n       * Create a button object for KeymanWeb UI buttons\r\n       *\r\n       * @constructor\r\n       * @param       {string}    _src         Image source\r\n       * @param       {string}    _caption     Alt text\r\n       * @param       {boolean}   _selected\r\n       * @return      {Object}\r\n       *\r\n       * @suppress {suspiciousCode}  // Closure isn't smart enough to realize that _onmouseover\r\n       *                             // and the like are defined on individual instances later.\r\n       *                             // It thinks they're always null.\r\n       **/\r\n      button(_src: string, _caption: string, _selected: boolean) {\r\n        /**\r\n         * Only ui.controllerHovered is referenced here:  it'd be easy enough to toggle it via closure\r\n         * and extract this inner class into its own definition outside of `class ToggleUI`.\r\n         *\r\n         * This would also give the main class type inference for its related fields and their\r\n         * uses.\r\n         */\r\n        const ui = this;\r\n\r\n        class Button {\r\n          // Button event-state management fields\r\n          _onclick: () => void = null;\r\n          _onmouseover: () => void = null;\r\n          _onmouseout: () => void = null;\r\n          _down = false;\r\n          _over = false;\r\n          _selected: boolean;\r\n\r\n          /**\r\n           * The top-level element of the button.\r\n           */\r\n          _elem: HTMLDivElement & Owned<Button>;\r\n\r\n          getElem() {\r\n            return this._elem;\r\n          };\r\n\r\n          private __updatestyle() {\r\n            var ss=this._elem.style;\r\n            if(this._over) {\r\n              ss.margin = '0px';\r\n              if(this._selected) {\r\n                ss.border = 'solid 1px #ad4a28';\r\n                ss.background = '#dfb4b4';\r\n              }\r\n              else {\r\n                ss.border = 'solid 1px #dfb4b4';\r\n                ss.background = '#f3e5de';\r\n              }\r\n            } else if(this._selected) {\r\n              ss.background = '#f3e5de';\r\n              ss.margin = '0px';\r\n              ss.border = 'solid 1px #ad4a28';\r\n            } else {\r\n              ss.background = 'none';\r\n              ss.margin = '1px';\r\n              ss.border = 'none';\r\n            }\r\n          };\r\n\r\n          private __mouseover = () => {\r\n            ui.controllerHovered = true;\r\n            this._over = true;\r\n            if(this._onmouseover != null) {\r\n              this._onmouseover();\r\n            }\r\n            this.__updatestyle();\r\n          };\r\n\r\n          private __mouseout = () => {\r\n            ui.controllerHovered = false;\r\n            this._over = false;\r\n            if(this._onmouseout != null) {\r\n              this._onmouseout();\r\n            }\r\n            this.__updatestyle();\r\n          };\r\n\r\n          private __click = () => {\r\n            keymanweb.activatingUI(false); // Clear activating UI flag once click is acknowledged\r\n            if(this._onclick != null) {\r\n                return this._onclick();\r\n            }\r\n            return false;\r\n          };\r\n\r\n          private __mousedown = () => {\r\n            keymanweb.activatingUI(true);  // Set activating UI flag (to manage focus/blur) on any UI mouse down event\r\n            this._down = true;\r\n            this.__updatestyle();\r\n            return false;\r\n          };\r\n\r\n          private __mouseup = () => {\r\n            this._down = false;\r\n            this.__updatestyle();\r\n          };\r\n\r\n\r\n          _setSelected(_value: boolean) {\r\n            keymanweb.activatingUI(false); // Always clear activating UI flag after selecting UI\r\n            this._selected = _value;\r\n            this.__updatestyle();\r\n          };\r\n\r\n          _getSelected() {\r\n            return this._selected;\r\n          };\r\n\r\n          _getOver() {\r\n            return this._over;\r\n          };\r\n\r\n          _getDown() {\r\n            return this._down;\r\n          };\r\n\r\n          constructor(/* TODO: put wrapping method's params HERE instead upon class-extraction */) {\r\n            this._selected = _selected;\r\n\r\n            let imgPath=util.getOption('resources') + 'ui/toggle/';\r\n            let _elemImg = util.createElement('img') as HTMLImageElement & Owned<Button>;\r\n            this._elem = util.createElement('div');\r\n            this._elem['_owningObject'] = this;\r\n            _elemImg.style.display = 'block';\r\n            _elemImg.src = imgPath + _src;\r\n            _elemImg.id = 'KMW_Controller_Img';\r\n            this._elem.style.margin = '0px'; //display = 'inline';\r\n            this._elem.style.width = '24px';\r\n            this._elem.style.height = '24px';\r\n            this._elem.style.zIndex = '10002';\r\n            this._elem.style.lineHeight = '100%';\r\n            this._elem.style.cssFloat = 'left';\r\n\r\n            _elemImg.title = _caption;\r\n            _elemImg.alt = _caption;\r\n            this._elem.appendChild(_elemImg);\r\n            this._elem.onmouseover = this.__mouseover;\r\n            this._elem.onmouseout = this.__mouseout;\r\n            this._elem.onmousedown = this.__mousedown;\r\n            this._elem.onmouseup = this.__mouseup;\r\n            _elemImg['_owningObject'] = this;\r\n            _elemImg.onclick = this.__click;\r\n\r\n            this.__updatestyle();\r\n          }\r\n        }\r\n\r\n        return new Button();\r\n      };\r\n\r\n      /**\r\n       * Function     Initialize\r\n       * Scope        Private\r\n       * Description  Initialize Toggle User Interface\r\n       **/\r\n      initialize() {\r\n        //Never initialize before KMW!\r\n        if(!keymanweb.initialized || util.isTouchDevice()) {\r\n          return;\r\n        }\r\n\r\n        if(!this.initialized) { // I2403 - Allow toggle design to be loaded twice\r\n          this.controller = util.createElement('div');\r\n        } else {\r\n          this.controller.innerHTML = '';  // I2403 - Allow toggle design to be loaded twice\r\n        }\r\n\r\n        const imgPath = util.getOption('resources')+'ui/toggle/';\r\n        this.controller.style.background = 'url('+imgPath+'kmwcontroller2x.gif)';\r\n        this.controller.style.padding = '1px 2px';\r\n\r\n        // Create keyboard list and OSK control buttones, and set initial styles\r\n        const v1=util.loadCookie<KeyboardCookie>('KeymanWeb_Keyboard');\r\n        let kbdEnabledOnLoad=false;\r\n        if(typeof(v1.current) != 'undefined') {\r\n          kbdEnabledOnLoad = (v1.current.indexOf('---') < 0);\r\n        }\r\n\r\n        this.kbdButton = this.button('kmw_logo_16.gif', 'Use Web Keyboard', kbdEnabledOnLoad);\r\n        this.controller.appendChild(this.kbdButton.getElem());\r\n\r\n        const v2 = util.loadCookie<Required<FloatingOSKViewCookie>>('KeymanWeb_OnScreenKeyboard');\r\n        let oskEnabledOnLoad=true;\r\n        if(typeof(v2.visible) != 'undefined') {\r\n          oskEnabledOnLoad=(v2.visible == 1);\r\n        }\r\n\r\n        // Add keyboard icon\r\n        this.oskButton = this.button('kmw_osk_16.gif','Show On Screen Keyboard',oskEnabledOnLoad);\r\n        this.oskButton._onclick = this.switchOsk;\r\n        this.controller.appendChild(this.oskButton.getElem());\r\n\r\n        // Hide controller unless already initialized\r\n        if(!this.initialized) {\r\n          this.controller.style.display = 'none';\r\n        }\r\n        this.controller.style.zIndex = '10001';\r\n        this.controller.style.position = 'absolute';\r\n\r\n        // The following three lines prevent the UI from being positioned incorrectly when the page is resized,\r\n        // but don't fix the problem completely, as the kbd icon still moves.  probably need to insert a DIV\r\n        // between the button and the container, and make that DIV fixed height and overflow:hidden\r\n        //ui.controller.style.maxHeight = '26px';\r\n        //ui.oskButton.getElem().style.position = 'relative';\r\n        //ui.oskButton.getElem().style.overflow = 'hidden';\r\n\r\n        if(!this.initialized) { // I2403 - Allow toggle design to be loaded more than once if necessary\r\n          document.body.appendChild(this.controller);\r\n        }\r\n\r\n        // Set initialized true\r\n        this.initialized = true;  // I2403 - Allow toggle design to be loaded more than once if needed\r\n\r\n        // Then update the keyboard list if keyboards already loaded (i.e. in page script)\r\n        this.updateKeyboardList();\r\n        this.registerEvents();\r\n\r\n        // Future improvement:  have the UI modules track their own stylesheets as part of their\r\n        // element hierarchy.  engine/dom-utils has a spun-off StylesheetManager class that's\r\n        // perfect for this.\r\n        util.addStyleSheet(this.stylingCSS);\r\n      }\r\n\r\n      shutdown() {\r\n        var root = this.controller;\r\n\r\n        if(root) {\r\n          root.parentNode.removeChild(root);\r\n        }\r\n      }\r\n\r\n      /**\r\n       * Function     updateKeyboardList\r\n       * Scope        Private\r\n       * Description  Rebuild the UI and keyboard list\r\n       **/\r\n      readonly updateKeyboardList = () => {\r\n        if(!(keymanweb.initialized || this.initialized)) {\r\n          return; //TODO: may want to restart the timer??\r\n        }\r\n\r\n        this.updateList = false;\r\n\r\n        const _kbds=keymanweb.getKeyboards();\r\n        const imgPath=util.getOption('resources') +'ui/toggle/';\r\n\r\n        // Check the number of installed keyboards to determine whether or not we will have a dropdown\r\n        if(_kbds.length > 1) {\r\n          // Multiple keyboards (button)\r\n          const _kmw_ctrl_img=<HTMLImageElement> document.getElementById('KMW_Controller_Img');\r\n          _kmw_ctrl_img.src = imgPath+'kmw_logo_16_down.gif';\r\n          _kmw_ctrl_img.style.width = '100%';\r\n\r\n          this.controller.style.background = 'url('+imgPath+'kmwcontroller2x.gif)';\r\n\r\n          this.kbdButton.getElem().id = 'kmwico';\r\n          this.kbdButton.getElem().style.width = '36px';\r\n          this.kbdButton._onmouseover = () => {\r\n            this.keyboardMenu.className=\"sfhover\";\r\n          };\r\n          this.kbdButton._onmouseout = () => {\r\n              this.keyboardMenu.className=\"sfunhover\";\r\n          };\r\n          this.kbdButton._onclick = null;\r\n          this.createMenu();\r\n        }  else if(_kbds.length == 1) {\r\n          // Single keyboard (button)\r\n          const _kmw_ctrl_img=<HTMLImageElement> document.getElementById('KMW_Controller_Img')\r\n          _kmw_ctrl_img.src = imgPath+'kmw_logo_16.gif';\r\n\r\n          this.kbdButton.getElem().id = 'kmwico';\r\n          this.kbdButton.getElem().style.width = '24px';\r\n\r\n          var Lki=_kbds[0].InternalName;\r\n          var Lklc=_kbds[0].LanguageCode;\r\n          this.controller.style.background = 'url('+imgPath+'kmwcontroller2.gif)';\r\n          this.keyboards.push({_InternalName: Lki, _LanguageCode: Lklc, _Index: 0});\r\n          this.kbdButton._onclick = this.switchSingleKbd;\r\n          this.kbdButton._onmouseover = function() { };\r\n          this.kbdButton._onmouseout = function() { };\r\n\r\n          // We must reconstruct the ui.keyboards array, and this done by ui.createMenu.\r\n          this.createMenu();\r\n\r\n          // Must remove menu if keyboards have been removed leaving only a single keyboard\r\n          if(typeof(this.keyboardMenu) != 'undefined') {\r\n            delete this.keyboardMenu;\r\n          }\r\n        }\r\n\r\n        // Highlight the last active keyboard\r\n        var sk=keymanweb.getSavedKeyboard().split(':');\r\n        this.updateMenu(sk[0],sk[1]);\r\n      }\r\n\r\n      /* ----------------------------------------\r\n        Drop down menu\r\n        ---------------------------------------- */\r\n\r\n      //  var  _SelectedMenuItem;\r\n\r\n      /**\r\n       * Function     selecKbd\r\n       * Scope        Private\r\n       * @param       {number}  _kbd\r\n       * Description  Select a keyboard from the drop down menu\r\n       **/\r\n      selectKbd(_kbd: number) {\r\n        let _name,_lgCode;\r\n        if(_kbd < 0) {\r\n          _name = '';\r\n          _lgCode='';\r\n        } else {\r\n          _name = this.keyboards[_kbd]._InternalName;\r\n          _lgCode = this.keyboards[_kbd]._LanguageCode;\r\n        }\r\n\r\n        keymanweb.setActiveKeyboard(_name,_lgCode);\r\n        keymanweb.focusLastActiveElement();\r\n        this.kbdButton._setSelected(_name != '');\r\n        if(_kbd >= 0) {\r\n          this.lastActiveKeyboard = _kbd;\r\n        }\r\n\r\n        return false;\r\n      };\r\n\r\n      /**\r\n       * Function     updateMenu\r\n       * Scope        Private\r\n       * @param       {string}    kbdName\r\n       * @param       {?string=}  lgCode\r\n       * Description  Updates the menu selection when a change is required\r\n       **/\r\n      updateMenu(kbdName: string, lgCode: string) {\r\n        let _k=document.getElementById('KMWSel_$');\r\n\r\n        for(let i=0; i < this.keyboards.length; i++) {\r\n          if(this.keyboards[i]._InternalName == kbdName && this.keyboards[i]._LanguageCode == lgCode) {\r\n            _k=document.getElementById('KMWSel_' + this.keyboards[i]._InternalName+'$' + this.keyboards[i]._Index);\r\n          }\r\n        }\r\n\r\n        if(_k) {\r\n          if(this.selectedMenuItem != null) {\r\n            this.selectedMenuItem.className='';\r\n          }\r\n          _k.className='selected';\r\n          // The keyboard's entry in the keyboard-list drop-down is an <a> element.\r\n          this.selectedMenuItem=_k as HTMLAnchorElement;\r\n        }\r\n\r\n        // Occurs for desktop form-factors when no keyboard (aka the sys default) is active.\r\n        if(!this.oskButton) {\r\n          return;\r\n        }\r\n\r\n        // Hide the OSK button for CJK keyboards (or non-mapped)\r\n        if(lgCode=='cmn' || lgCode=='jpn' || lgCode=='kor') {\r\n          this.oskButton.getElem().style.display='none';\r\n          //osk['show'](true);\r\n        } else if(kbdName == '') {\r\n          this.oskButton.getElem().style.display='none';\r\n        } else {\r\n          this.oskButton.getElem().style.display='block';\r\n          //osk['show'](osk['isEnabled']());\r\n        }\r\n      }\r\n\r\n      get stylingCSS() {\r\n        return `\r\n#KeymanWeb_KbdList {\r\n  display: block;\r\n  position: absolute;\r\n  width: auto;\r\n  line-height: 100%;\r\n  margin: 0;\r\n  clear: both;\r\n  float: none;\r\n  top: auto;\r\n  border: solid 2px #ad4a28;\r\n  -moz-border-radius: 4px;\r\n  -webkit-border-radius: 4px;\r\n  border-radius: 4px;\r\n  box-shadow: 4px 4px 2px rgba(136,136,136,.5);\r\n  -webkit-box-shadow: 4px 4px 2px rgba(136,136,136,.5);\r\n  -moz-box-shadow: 4px 4px 2px rgba(136,136,136,.5);\r\n  list-style: none;\r\n  padding: 0;\r\n  background: white;\r\n  max-height: 300px;\r\n  overflow-y: scroll;\r\n  overflow-x: hidden;\r\n  white-space: nowrap;\r\n  z-index: 10001; /* above the osk */\r\n}\r\n\r\n.sfunhover#KeymanWeb_KbdList {\r\n  display: none; left: -999px;\r\n}\r\n\r\n.sfhover#KeymanWeb_KbdList {\r\n  display: block;\r\n  left: auto;\r\n}\r\n\r\n#KeymanWeb_KbdList li {\r\n  float: none;\r\n  width: auto;\r\n  padding: 0;\r\n  margin: 0;\r\n  text-align: left;\r\n}\r\n\r\n#KeymanWeb_KbdList li a {\r\n  display: block;\r\n  padding: 2px 4px;\r\n  color: #404040;\r\n  font-family: Tahoma,Verdana,Arial,sans-serif;\r\n  font-size: 8pt;\r\n  text-decoration: none;\r\n}\r\n\r\n#KeymanWeb_KbdList li a.selected {\r\n  font-weight: bold;\r\n  color: black;\r\n}\r\n\r\n#KeymanWeb_KbdList li a:hover {\r\n  color: white;\r\n  background-color: #ad4a28;\r\n  text-decoration: underline;\r\n}\r\n`;\r\n      }\r\n\r\n      /**\r\n       * Function     createMenu\r\n       * Scope        Private\r\n       * Description  Create the drop down menu and populate with loaded KeymanWeb keyboards\r\n       **/\r\n      createMenu() {\r\n        if(typeof(this.keyboardMenu) == 'undefined') { // I2403 - Allow toggle design to be loaded twice\r\n          this.keyboardMenu = util.createElement('ul');\r\n          this.keyboardMenu.id='KeymanWeb_KbdList';\r\n          this.keyboardMenu.className='sfunhover';\r\n        } else {\r\n          this.keyboardMenu.innerHTML = '';  // I2403 - Allow toggle design to be loaded twice\r\n        }\r\n\r\n        var _li = util.createElement('li');\r\n        var _a = util.createElement('a');\r\n        _a.innerHTML='(System keyboard)';\r\n        _a.href=\"#\";\r\n        _a.onclick = () => {\r\n          return this.selectKbd(-1);\r\n        };\r\n        _a.id='KMWSel_$';\r\n        _a.className='selected';\r\n        _li.appendChild(_a);\r\n\r\n        this.selectedMenuItem=_a;\r\n        this.keyboardMenu.appendChild(_li);\r\n\r\n        const _kbds=keymanweb.getKeyboards(), _added: Record<string, number> = {};\r\n        this.keyboards = [];\r\n        for(var _kbd = 0; _kbd < _kbds.length; _kbd++) {\r\n          var _li1=util.createElement('li');\r\n          var _a1=util.createElement('a');\r\n          _a1.innerHTML=_kbds[_kbd].LanguageName + ' - ' + _kbds[_kbd].Name;\r\n          if(!_added[_kbds[_kbd].InternalName]) _added[_kbds[_kbd].InternalName]=0;\r\n          _added[_kbds[_kbd].InternalName]++;\r\n\r\n          var _n=_added[_kbds[_kbd].InternalName];\r\n          this.keyboards.push({_InternalName: _kbds[_kbd].InternalName, _LanguageCode:_kbds[_kbd].LanguageCode, _Index: _n});\r\n\r\n          _a1.href=\"#\";\r\n          _a1.onclick = ((x) => { return () => this.selectKbd(x); })(this.keyboards.length-1);\r\n          _a1.id='KMWSel_'+_kbds[_kbd].InternalName+'$'+_n;\r\n\r\n          _li1.appendChild(_a1);\r\n          this.keyboardMenu.appendChild(_li1);\r\n        }\r\n\r\n        //if(!ui.initialized) // I2403 - Allow toggle design to be loaded twice\r\n        if(this.keyboardMenu.parentNode != this.kbdButton.getElem()) {\r\n          this.kbdButton.getElem().appendChild(this.keyboardMenu);\r\n        }\r\n      };\r\n\r\n    }\r\n\r\n\r\n    // Actually assign our UI module to the active Keyman engine.\r\n    const ui = keymanweb.ui = new ToggleUI();\r\n\r\n    // CTRL-K_SLASH:  toggles to and from default keyboard\r\n    keymanweb.addHotKey(191, 0x20, ui.switchSingleKbd);\r\n\r\n    // SHIFT-CTRL-K_SLASH:  cycles among available keyboards in sequence\r\n    keymanweb.addHotKey(191, 0x30, ui.switchNextKbd);\r\n\r\n    // ALT-K_SLASH:  Hides the OSK\r\n    keymanweb.addHotKey(191, 0x40, ui.switchOsk);\r\n\r\n    // // Initialize after KMW is fully initialized\r\n    // keymanweb['addEventListener']('loaduserinterface', ui.initialize);\r\n\r\n    keymanweb.addEventListener('controlfocused',function(params){\r\n      ui.doFocus(params.target, true, params.activeControl);\r\n    });\r\n\r\n    keymanweb.addEventListener('controlblurred',function(params){\r\n      ui.doFocus(params.target, false, null);\r\n    });\r\n\r\n    /**\r\n     * Keyboard registration event handler\r\n     *\r\n     * Set a timer to update the UI keyboard list on timeout after each keyboard is registered,\r\n     * thus updating only once when only if multiple keyboards are registered together\r\n     */\r\n    keymanweb.addEventListener('keyboardregistered', function(p) {\r\n      ui.updateList = true;\r\n      if(ui.updateTimer) {\r\n        clearTimeout(ui.updateTimer);\r\n      }\r\n      ui.updateTimer = window.setTimeout(ui.updateKeyboardList, 200);\r\n    });\r\n\r\n\r\n    /**\r\n     * Keyboard change event handler\r\n     *\r\n     * Update menu selection and control OSK display appropriately\r\n     */\r\n    keymanweb.addEventListener('keyboardchange', function(p) {\r\n      ui.updateMenu(p.internalName, p.languageCode);\r\n    });\r\n\r\n    // but also execute here, for asynchronous UI script loading (occurring after KMW initialization)\r\n    ui.initialize();\r\n\r\n  } catch(ex){}\r\n}"
  ],
  "mappings": "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",
  "names": [
    "_b",
    "keymanweb",
    "util",
    "_ToggleUI",
    "newState",
    "_v",
    "nLastKbd",
    "kbdName",
    "lgCode",
    "_kbds",
    "imgPath",
    "_kmw_ctrl_img",
    "Lki",
    "Lklc",
    "sk",
    "someElement",
    "focusing",
    "activeControl",
    "w",
    "h",
    "p",
    "x",
    "y",
    "ownerDoc",
    "osk",
    "oskPosition",
    "byUser",
    "_src",
    "_caption",
    "_selected",
    "ui",
    "_Button",
    "ss",
    "_value",
    "_elemImg",
    "__name",
    "Button",
    "v1",
    "kbdEnabledOnLoad",
    "v2",
    "oskEnabledOnLoad",
    "root",
    "_kbd",
    "_name",
    "_lgCode",
    "_k",
    "i",
    "_li",
    "_a",
    "_added",
    "_li1",
    "_a1",
    "_n",
    "ToggleUI",
    "params",
    "ex"
  ]
}