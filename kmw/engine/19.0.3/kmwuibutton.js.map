{
  "version": 3,
  "sources": [
    "web/src/app/ui/kmwuibutton.ts"
  ],
  "sourceRoot": "https://s.keyman.com/kmw/engine/19.0.3/src",
  "sourcesContent": [
    "/***\r\n   KeymanWeb 17.0\r\n   Copyright 2019-2023 SIL International\r\n***/\r\n\r\nimport type { KeymanEngine, UIModule } from 'keyman/app/browser';\r\n\r\ndeclare var keyman: KeymanEngine\r\n\r\nif(!keyman?.ui?.name) {\r\n\r\n  /********************************/\r\n  /*                              */\r\n  /* Button User Interface Code   */\r\n  /*                              */\r\n  /********************************/\r\n\r\n  /**\r\n   * Do not enclose in an anonymous function, as the compiler may create\r\n   * global scope variables to replace true, false, null, whcih can then collide\r\n   * with other variables.\r\n   * Instead, use the --output-wrapper command during optimization, which will\r\n   * add the anonymous function to enclose all code, including those optimized\r\n   * variables which would otherwise have global scope.\r\n   **/\r\n\r\n  try {\r\n    // Declare KeymanWeb, OnScreen keyboard and Util objects\r\n    const keymanweb = keyman;\r\n    const util=keymanweb.util;\r\n    // var dbg=keymanweb['debug'];\r\n\r\n    // Disable UI for touch devices\r\n    if(util.isTouchDevice()) {\r\n      throw '';\r\n    }\r\n\r\n    class UIButton implements UIModule {\r\n      // User interface global and variables\r\n      readonly name = 'button';\r\n\r\n      init = false;\r\n\r\n      /**\r\n       * Initialization timeout handle.\r\n       */\r\n      private initTimer: number = null;\r\n\r\n      private _KeymanWeb_KbdList: HTMLUListElement = null;\r\n\r\n      /**\r\n       * Tracks the element corresponding to the active keyboard on the keyboard list.\r\n       *\r\n       * Is also set when activating it due to user interaction.\r\n       */\r\n      private _KMWSel: HTMLElement = null;\r\n\r\n      updateTimer: number = 0;\r\n      updateList = true;\r\n\r\n      /**\r\n       * If no id == 'KeymanWebControl' element exists during init, this UI module\r\n       * will make its own, auto-insert it, and track the element here.\r\n       */\r\n      private _insertedElem: HTMLElement = null;\r\n\r\n      /**\r\n       * Highlight the currently active keyboard in the list of keyboards\r\n       **/\r\n      private _ShowSelected() {\r\n        let kbd=keymanweb.getActiveKeyboard();\r\n        let lgc=keymanweb.getActiveLanguage();\r\n        let kList = this._KeymanWeb_KbdList.childNodes;\r\n        let _r = /^KMWSel_(.*)\\$(.*)$/;\r\n\r\n        for(let i=1; i<kList.length; i++) {\r\n          (kList[i].childNodes[0] as HTMLElement).className = '';\r\n        }\r\n\r\n        let i: number;\r\n        for(i=2; i<kList.length; i++) {\r\n          let _rv = _r.exec((kList[i].childNodes[0] as HTMLElement).id);\r\n          if(_rv && (_rv[1] == kbd) && (_rv[2] == lgc)) {\r\n            break;\r\n          }\r\n        }\r\n        if(i >= kList.length) {\r\n          i=1;\r\n        }\r\n        (kList[i].childNodes[0] as HTMLElement).className = 'selected';\r\n      }\r\n\r\n      /**\r\n       * Select keyboard by id\r\n       *\r\n       * @param       {Event}  _id   keyboard selection event\r\n       * @return      {boolean}\r\n       */\r\n      readonly _SelectKeyboard = (_id: Event) => {\r\n        let id: string = '';\r\n        if(typeof(_id) == 'object') {\r\n          let t: HTMLElement = null;\r\n          if((typeof(_id.target) != 'undefined') && _id.target) {\r\n            t=_id.target as HTMLElement;\r\n          } else if((typeof(_id.srcElement) != 'undefined') && _id.srcElement) {\r\n            t=_id.srcElement as HTMLElement;\r\n          }\r\n\r\n          if(t) {\r\n            id=t.id;\r\n          }\r\n        }\r\n\r\n        let _r=/^KMWSel_(.*)\\$(.*)$/;\r\n        let _rv=_r.exec(id),_lgc='',_name='';\r\n        if(_rv !== null) {\r\n          _name = _rv[1].split('$')[0]; //new code\r\n          _lgc = id.split('$')[1];\r\n          if(this._KMWSel != null) {\r\n            this._KMWSel.className = '';\r\n          }\r\n          let _k = document.getElementById(id);\r\n          if(_k) {\r\n            _k.className='selected';\r\n          }\r\n          this._KMWSel = _k;\r\n          keymanweb.setActiveKeyboard(_name,_lgc);\r\n        } else {\r\n          _name=null;\r\n        }\r\n\r\n        keymanweb.focusLastActiveElement();\r\n        let osk = keymanweb.osk;\r\n        if(osk && osk.isEnabled()) {\r\n          osk.show(true);\r\n        }\r\n\r\n        this._ShowKeyboardButton(_name);\r\n        return false;\r\n      }\r\n\r\n      /**\r\n       * Set KMW UI activation state on mouse click\r\n       *\r\n       * @param       {Event}    e     event\r\n       */\r\n      readonly _SelectorMouseDown = (e: MouseEvent) => {\r\n        const x=keymanweb.getLastActiveElement();\r\n\r\n        // Set the focus to an input field, to get correct OSK display behaviour\r\n        if(!x) {\r\n          this._FocusFirstInput();\r\n        } else {\r\n          keymanweb.focusLastActiveElement();\r\n        }\r\n\r\n        if(keymanweb.activatingUI) {\r\n          keymanweb.activatingUI(1);\r\n        }\r\n      }\r\n\r\n      /**\r\n       * Set focus on mouse up\r\n       *\r\n       * @param       {Event}    e     event\r\n       */\r\n      readonly _SelectorMouseUp = (e: MouseEvent) => {\r\n        const x=keymanweb.getLastActiveElement();\r\n\r\n        // Set the focus to an input field, to get correct OSK display behaviour\r\n        if(!x) {\r\n          this._FocusFirstInput();\r\n        } else {\r\n          keymanweb.focusLastActiveElement();\r\n        }\r\n      }\r\n\r\n      /**\r\n       * Set KMW UI activation state on mouse over\r\n       *\r\n       * @param       {Event}   e     event\r\n       */\r\n      readonly _SelectorMouseOver = (e: MouseEvent) => {\r\n        // highlight the currently active keyboard\r\n        this._ShowSelected();\r\n\r\n        if(keymanweb.activatingUI) {\r\n          keymanweb.activatingUI(1);\r\n        }\r\n\r\n        document.getElementById(\"kmwico_li\").className=\"sfhover\";\r\n\r\n        // Conditionally display keyboard button\r\n        this._ShowKeyboardButton();\r\n      }\r\n\r\n      /**\r\n       * Sets the focus to the first input or textarea found on the current page\r\n       * to ensure consistent keyboard selection and OSK display behaviour\r\n       */\r\n      private _FocusFirstInput() {\r\n        let ip: HTMLInputElement = null;\r\n        let tp: HTMLTextAreaElement = null;\r\n        const iList=document.getElementsByTagName(\"input\");\r\n        const tList=document.getElementsByTagName(\"textarea\");\r\n\r\n        let i: number;\r\n        for(i=0; i<iList.length; i++) {\r\n          if(iList[i].type == 'text') {\r\n            break;\r\n          }\r\n        }\r\n\r\n        if(i < iList.length) {\r\n          ip=iList[i];\r\n        }\r\n\r\n        if(tList.length > 0) {\r\n          tp = tList[0];\r\n        }\r\n\r\n        if((!ip) && (!tp)) {\r\n          return;\r\n        } else if(ip && !tp) {\r\n          ip.focus();\r\n        } else if(tp && !ip) {\r\n          tp.focus();\r\n        } else if(ip.offsetTop < tp.offsetTop) {\r\n          ip.focus();\r\n        } else if(ip.offsetTop > tp.offsetTop) {\r\n          tp.focus();\r\n        } else if(ip.offsetLeft < tp.offsetLeft) {\r\n          ip.focus();\r\n        } else {\r\n          tp.focus();\r\n        }\r\n      }\r\n\r\n      /**\r\n       * Clear KMW UI activation state on mouse out\r\n       *\r\n       * @param       {Event}    e     event\r\n       */\r\n      readonly _SelectorMouseOut = (e: MouseEvent) => {\r\n        if(keymanweb.activatingUI) {\r\n          keymanweb.activatingUI(0);\r\n        }\r\n        document.getElementById(\"kmwico_li\").className=\"sfunhover\";\r\n      }\r\n\r\n      /**\r\n       * Disable the button to show/hide the OSK if no active keyboard or active keyboard is CJK (user cannot hide)\r\n       *\r\n       * @param       {?string=}  _name     current keyboard name\r\n       */\r\n      private _ShowKeyboardButton(_name?: string) {\r\n        let kbdName = keymanweb.getActiveKeyboard();\r\n        let kbdId = document.getElementById(\"KMW_Keyboard\");\r\n        if(arguments.length > 0) {\r\n          kbdName = _name;\r\n        }\r\n\r\n        if(kbdId) {\r\n          if((kbdName == '') || keymanweb.isCJK()) {\r\n            kbdId.className='kmw_disabled';\r\n          } else {\r\n            let osk = keymanweb.osk;\r\n            kbdId.className = osk && osk.isEnabled() ? 'kmw_show' : 'kmw_hide';\r\n          }\r\n        }\r\n      }\r\n\r\n      registerEvents() {\r\n        let osk = keymanweb.osk;\r\n        if(!osk) {\r\n          return;\r\n        }\r\n        /**\r\n         * UI Functions called by KeymanWeb or OSK\r\n         */\r\n        osk.addEventListener('show', (oskPosition) => {\r\n          const t=keymanweb.getLastActiveElement();\r\n          if(t) {\r\n            if(!oskPosition['userLocated']) {\r\n              oskPosition['x'] = util.getAbsoluteX(t);\r\n              oskPosition['y'] = util.getAbsoluteY(t)+t.offsetHeight;\r\n            }\r\n          }\r\n\r\n          this._ShowKeyboardButton();\r\n          return oskPosition;\r\n        });\r\n\r\n        /* TODO: why is this still needed??? Does it actually do anything?? */\r\n        osk.addEventListener('hide', function(obj) {\r\n          if((arguments.length > 0) && obj.HiddenByUser) {\r\n            let _a = document.getElementById('KMW_Keyboard');\r\n            if(_a) {\r\n              _a.className = 'kmw_hide';\r\n            }\r\n          }\r\n        });\r\n      }\r\n\r\n      /**\r\n       * Show or hide the OSK (always visible for CJK keyboards)\r\n       *\r\n       * @param       {Object}    _anchor     anchor element (?)\r\n       * @return      {boolean}\r\n       **/\r\n      readonly _ShowKeymanWebKeyboard = () => {\r\n        const kbdId=document.getElementById(\"KMW_Keyboard\");\r\n        let osk = keymanweb.osk;\r\n\r\n        if((kbdId.className!='kmw_disabled') && osk && osk.show) {\r\n          if(osk.isEnabled()) {\r\n            osk.hide();\r\n          } else {\r\n            osk.show(true);\r\n          }\r\n        }\r\n        if(window.event) {\r\n          window.event.returnValue=false;\r\n        }\r\n\r\n        keymanweb.focusLastActiveElement();\r\n        return false;\r\n      }\r\n\r\n      /**\r\n       * Initialize Button User Interface\r\n       **/\r\n      readonly initialize = () => {\r\n        if(this.initTimer) {\r\n          window.clearTimeout(this.initTimer);\r\n          this.initTimer = null;\r\n        }\r\n\r\n        //Never initialize UI before KMW (parameters will be undefined)\r\n        if(!keymanweb.initialized) {\r\n          this.initTimer = window.setTimeout(this.initialize, 50);\r\n          return;\r\n        }\r\n\r\n        if(this.init || util.isTouchDevice()) {\r\n          return;\r\n        }\r\n\r\n        this.init = true;\r\n\r\n        util.addStyleSheet(this._Appearance);\r\n\r\n        this._KeymanWeb_KbdList = util.createElement('ul');\r\n        this._KeymanWeb_KbdList.id = 'KeymanWeb_KbdList';\r\n\r\n        let _elem = document.getElementById('KeymanWebControl');\r\n        if(!_elem) {\r\n          const _elems = document.getElementsByTagName('div');\r\n          for(let _i = 0; _i < _elems.length; _i++) {\r\n            if(_elems[_i].className == 'KeymanWebControl') {\r\n              _elem = _elems[_i]; {\r\n                break;\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n        // Insert as first child of body if not defined by user\r\n        if(!_elem && (document.body != null)) {\r\n          _elem=document.createElement('DIV');\r\n          _elem.id='KeymanWebControl';\r\n          document.body.insertBefore(_elem,document.body.firstChild);\r\n          this._insertedElem = _elem;\r\n        }\r\n\r\n\r\n        let imgPath=util.getOption('resources')+'ui/button/';\r\n        if(_elem) {\r\n          // Append another DIV to follow the main control with clear:both to prevent selection over entire width of window\r\n          const dx=document.createElement('DIV')\r\n          const ds=dx.style;\r\n          ds.clear='both';\r\n          _elem.parentNode.insertBefore(dx,_elem.nextSibling);\r\n\r\n          const _btn=util.createElement('img');\r\n          const _ul=util.createElement('ul');\r\n          const _li0=util.createElement('li');\r\n\r\n          _btn.id = 'kmwico_a';\r\n          _btn.src = imgPath+'kmw_button.gif';\r\n          _btn.onclick = function() {\r\n            return false;\r\n          }  //may want to use this in iOS *****\r\n          _li0.appendChild(_btn);\r\n          _li0.id = 'kmwico_li';\r\n          _ul.appendChild(_li0);\r\n          _ul.id = 'kmwico';\r\n          _ul.style.display = 'block';\r\n          _elem.appendChild(_ul);\r\n        } else {\r\n          // Do not define any UI behaviour if no controller element can be found\r\n          return;\r\n        }\r\n\r\n        // ... wait, what?  I can't find any evidence of this reference point existing.\r\n        // Even tag `release-web-stable-2.0` turns up results only for this specific sourcefile.\r\n        // Thus, in essence:  if(true) { /* ... */ }\r\n        // @ts-ignore\r\n        if(!keymanweb['iOS']) {\r\n          var _li = util.createElement('li');\r\n          var _a = util.createElement('a');\r\n          var _img = util.createElement('img');\r\n          _img.src = imgPath+'kbdicon.gif';\r\n          _a.appendChild(_img);\r\n\r\n          const _txt1 = document.createTextNode(' Hide Keyboard');\r\n          const _txt2 = document.createTextNode(' Show Keyboard');\r\n          const _sp1 = util.createElement('span');\r\n          _sp1.id = 'KMW_KbdVisibleMsg';\r\n          _sp1.appendChild(_txt1);\r\n          _a.appendChild(_sp1);\r\n\r\n          var _sp2 = util.createElement('span');\r\n          _sp2.id = 'KMW_KbdHiddenMsg';\r\n          _sp2.appendChild(_txt2);\r\n          _a.appendChild(_sp2);\r\n          _a.onmousedown = this._ShowKeymanWebKeyboard;\r\n          _a.href = '#';\r\n          _a.id = 'KMW_Keyboard';\r\n          _li.id = 'KMW_ButtonUI_KbdIcon';\r\n          _li.appendChild(_a);\r\n          this._KMWSel = _a;\r\n          this._KeymanWeb_KbdList.appendChild(_li);\r\n        }\r\n\r\n        var _li1 = util.createElement('li');\r\n        _li1.id = 'KMW_ButtonUI_KbdList';\r\n        var _a1 = util.createElement('a');\r\n        _a1.appendChild(document.createTextNode('(System keyboard)'));\r\n\r\n        _a1.onclick = this._SelectKeyboard;\r\n        _a1.href = '#';\r\n        _a1.id='KMWSel_$';\r\n        _a1.className='selected';\r\n        _li1.appendChild(_a1);\r\n        this._KMWSel = _a1;\r\n        this._KeymanWeb_KbdList.appendChild(_li1);\r\n\r\n        this.updateKeyboardList();\r\n\r\n        document.getElementById('kmwico_li').appendChild(this._KeymanWeb_KbdList);\r\n\r\n        var _sfEl = document.getElementById(\"kmwico_li\");\r\n        util.attachDOMEvent(_sfEl,'mousedown',this._SelectorMouseDown);\r\n        util.attachDOMEvent(_sfEl,'mouseover',this._SelectorMouseOver);\r\n        util.attachDOMEvent(_sfEl,'mouseout',this._SelectorMouseOut);\r\n        util.attachDOMEvent(_sfEl,'mouseup',this._SelectorMouseUp);\r\n\r\n        this.registerEvents();\r\n        keymanweb.focusLastActiveElement();  \t//TODO: this needs to be extended - if no element is active, try and identify an enabled input element\r\n      }\r\n\r\n      shutdown() {\r\n        const root = this._insertedElem;\r\n        if(root) {\r\n          root.parentNode.removeChild(root);\r\n        }\r\n      }\r\n\r\n      /**\r\n       * Update the entire menu when keyboards are registered or deregistered\r\n       **/\r\n      readonly updateKeyboardList = () => {\r\n        this.updateList = false;\r\n\r\n        if(!this.init) {\r\n          return;\r\n        }\r\n\r\n        // Clear existing list first (first two nodes must be preserved)\r\n        for(let i = this._KeymanWeb_KbdList.childNodes.length; i>2; i--) {\r\n          this._KeymanWeb_KbdList.removeChild(this._KeymanWeb_KbdList.childNodes[i-1]);\r\n        }\r\n\r\n        const kbds=keymanweb.getKeyboards();\r\n        if(kbds.length > 0) {\r\n          for(var i:number=0; i<kbds.length; i++) {\r\n            this.registerKeyboard(\r\n              kbds[i].InternalName,\r\n              kbds[i].LanguageName,\r\n              kbds[i].Name,\r\n              kbds[i].LanguageCode\r\n            );\r\n          }\r\n        }\r\n      }\r\n\r\n      /**\r\n       * As each keyboard stub is registered, append it to the list\r\n       *\r\n       * @param       {string}    Lki     internal name\r\n       * @param       {string}    Lkl     language name\r\n       * @param       {string}    Lkn     keyboard name\r\n       * @param       {string}    Lklc    language code\r\n       **/\r\n      registerKeyboard(\r\n        Lki: string,\r\n        Lkl: string,\r\n        Lkn: string,\r\n        Lklc: string\r\n      ) {\r\n        const _li2 = util.createElement('li');\r\n        const _a2 = util.createElement('a');\r\n        let _t = Lkn.replace(/\\s?keyboard/i,'');\r\n\r\n        if(Lkl) {\r\n          var lg=Lkl.split(',')[0];\r\n          if(Lkn.search(lg) == -1) {\r\n            _t = lg+' ('+_t+')';\r\n          }\r\n        }\r\n        if(_t.length > 26) {\r\n          _t=_t.substr(0,24)+'\\u2026';\r\n        }\r\n        _a2.appendChild(document.createTextNode(_t));\r\n        _a2.onclick = this._SelectKeyboard;\r\n        _a2.href = '#';\r\n        _a2.id='KMWSel_'+Lki+'$'+Lklc;\r\n        _li2.appendChild(_a2);\r\n        this._KeymanWeb_KbdList.appendChild(_li2);\r\n      }\r\n\r\n      // Define appearance of this interface\r\n      private _Appearance = `\r\n#kmwico, #kmwkbd {\r\n  vertical-align: middle;\r\n}\r\n\r\n#KeymanWebControl {\r\n  float:left;\r\n}\r\n\r\n#KeymanWebControl * {\r\n  letter-spacing: 0px !important;\r\n  line-height: 1li !important;\r\n  white-space: nowrap !important;\r\n}\r\n\r\n#KeymanWebControl #kmwico img {\r\n  vertical-align: top;\r\n  padding: 0;\r\n  margin: 0;\r\n  border: none;\r\n}\r\n\r\n#KeymanWebControl #kmwico, #kmwico ul {\r\n  padding: 0;\r\n  margin: 0;\r\n  list-style: none;\r\n}\r\n\r\n#KeymanWebControl #kmwico_a {\r\n  display: block;\r\n  /* border: none !important; */\r\n  width: 22px; height: 23px;                                 /* sizes needed for kmw_button.gif */\r\n}\r\n\r\n#KeymanWebControl #kmwico li {\r\n  text-align: left;\r\n}\r\n\r\n#KeymanWebControl #kmwico li ul {\r\n  display: block;\r\n  position: absolute;\r\n  left: -5999px;\r\n  border: solid 2px #ad4a28;\r\n  background: white;\r\n  border-radius: 4px;\r\n  box-shadow: 4px 4px 2px #666;\r\n  z-index: 10011; /* above the osk */\r\n}\r\n\r\n#KeymanWebControl #kmwico li.sfunhover ul {\r\n  display: none; left: -5999px;\r\n}\r\n\r\n#KeymanWebControl #kmwico li:hover ul, #kmwico li.sfhover ul {\r\n  display: block;\r\n  left: auto;\r\n}\r\n\r\n#KeymanWebControl #kmwico ul li {\r\n  float: none;\r\n  padding: 0 !important;\r\n  margin: 0 !important;\r\n  width: 136px !important;\r\n}\r\n\r\n#KeymanWebControl #KMW_LanguageName {\r\n  font-weight: bold;\r\n}\r\n\r\n#KeymanWebControl #kmwico ul li a, #kmwico ul li a:visited {\r\n  display: block;\r\n  padding: 2px 4px !important;\r\n  border: none !important;\r\n  /* width: auto; */\r\n  color: #404040;\r\n  font-family: Tahoma,Verdana,Arial,sans-serif;\r\n  font-size: 8pt;\r\n  text-decoration: none;\r\n}\r\n\r\n#KeymanWebControl #kmwico ul li a.selected {\r\n  font-weight: bold;\r\n  color: black;\r\n}\r\n\r\n#KeymanWebControl #kmwico ul li a:hover {\r\n  color: white;\r\n  background-color: #ad4a28;\r\n}\r\n\r\n#KeymanWebControl #kmwico ul li a.kmw_disabled, #KeymanWebControl #kmwico ul li a.kmw_disabled:hover {\r\n  color: #c0c0c0; cursor: default;\r\n  background-color: white;\r\n}\r\n\r\n#KeymanWebControl #kmwico ul li a.kmw_show span#KMW_KbdHiddenMsg, #KeymanWebControl #kmwico ul li a.kmw_disabled span#KMW_KbdVisibleMsg {\r\n  display: none;\r\n}\r\n\r\n#KeymanWebControl #kmwico ul li a.kmw_show span#KMW_KbdVisibleMsg {\r\n  display: inline;\r\n}\r\n\r\n#KeymanWebControl #kmwico ul li a.kmw_hide span#KMW_KbdHiddenMsg {\r\n  display: inline;\r\n}\r\n\r\n#KeymanWebControl #kmwico ul li a.kmw_hide span#KMW_KbdVisibleMsg {\r\n  display: none;\r\n}\r\n\r\n#KeymanWebControl #kmwico ul li#KMW_ButtonUI_KbdIcon {\r\n  border-bottom: solid 1px #ad4a28;\r\n}\r\n`\r\n    }\r\n\r\n    const ui = keymanweb.ui = new UIButton();\r\n\r\n    /**\r\n     * Keyboard registration event handler\r\n     *\r\n     * Set a timer to update the UI keyboard list on timeout after each keyboard is registered,\r\n     * thus updating only once when only if multiple keyboards are registered together\r\n     */\r\n    keymanweb.addEventListener('keyboardregistered', function(p) {\r\n      ui.updateList = true;\r\n      if(ui.updateTimer) {\r\n        clearTimeout(ui.updateTimer);\r\n      }\r\n      ui.updateTimer = window.setTimeout(ui.updateKeyboardList, 20);\r\n    });\r\n\r\n    // but also call initialization when script loaded, which is after KMW initialization for asynchronous script loading\r\n    ui.initialize();\r\n  } catch(err){}\r\n}"
  ],
  "mappings": "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",
  "names": [
    "_b",
    "keymanweb",
    "util",
    "_UIButton",
    "_id",
    "id",
    "t",
    "_rv",
    "_lgc",
    "_name",
    "_k",
    "osk",
    "kbdId",
    "_elem",
    "_elems",
    "_i",
    "imgPath",
    "dx",
    "ds",
    "_btn",
    "_ul",
    "_li0",
    "_li",
    "_a",
    "_img",
    "_txt1",
    "_txt2",
    "_sp1",
    "_sp2",
    "_li1",
    "_a1",
    "_sfEl",
    "kbds",
    "i",
    "kbd",
    "lgc",
    "kList",
    "_r",
    "ip",
    "tp",
    "iList",
    "tList",
    "kbdName",
    "oskPosition",
    "obj",
    "root",
    "Lki",
    "Lkl",
    "Lkn",
    "Lklc",
    "_li2",
    "_a2",
    "_t",
    "lg",
    "__name",
    "UIButton",
    "ui",
    "p",
    "err"
  ]
}